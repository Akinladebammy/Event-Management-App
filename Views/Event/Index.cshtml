@model IEnumerable<EventManagementApp.DTOs.EventDto>

@{
    ViewData["Title"] = "Browse Events";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUserId = ViewBag.CurrentUserId as Guid?;
    var username = ViewBag.Username as string;
    var userRole = ViewBag.UserRole as string;
}

<style>
    body {
        background-color: #f8f9fa;
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .events-container {
        padding: 30px;
        background-color: #f8f9fa;
        min-height: calc(100vh - 140px);
    }

    /* Welcome Banner - Similar to Admin Dashboard */
    .welcome-banner {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 40px;
        border-radius: 12px;
        margin-bottom: 30px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

        .welcome-banner h1 {
            margin: 0 0 10px 0;
            font-size: 2.5rem;
            font-weight: 600;
        }

        .welcome-banner p {
            margin: 0;
            opacity: 0.9;
            font-size: 1.1rem;
        }

    /* User Navigation Bar - Card Style */
    .user-navbar {
        background: white;
        border-radius: 12px;
        padding: 25px;
        margin-bottom: 30px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        border: 1px solid #e9ecef;
    }

    .navbar-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 20px;
    }

    .user-info {
        color: #2c3e50;
    }

        .user-info h3 {
            margin: 0 0 5px 0;
            font-size: 1.5rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .user-info p {
            margin: 0;
            color: #6c757d;
            font-size: 0.95rem;
        }

    .nav-actions {
        display: flex;
        gap: 12px;
        flex-wrap: wrap;
    }

    .btn-nav {
        padding: 12px 20px;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        border: 1px solid transparent;
        cursor: pointer;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 8px;
        white-space: nowrap;
    }

    .btn-primary-nav {
        background: linear-gradient(135deg, #007bff, #0056b3);
        color: white;
    }

        .btn-primary-nav:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 123, 255, 0.4);
            color: white;
            text-decoration: none;
        }

    .btn-secondary-nav {
        background: #f8f9fa;
        color: #495057;
        border: 1px solid #e9ecef;
    }

        .btn-secondary-nav:hover {
            background: #e9ecef;
            color: #495057;
            text-decoration: none;
            transform: translateY(-1px);
        }

    .btn-danger-nav {
        background: linear-gradient(135deg, #dc3545, #c82333);
        color: white;
    }

        .btn-danger-nav:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(220, 53, 69, 0.4);
            color: white;
            text-decoration: none;
        }

    /* Quick Stats Section - Same as Admin Dashboard */
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 25px;
        margin-bottom: 40px;
    }

    .stat-card {
        background: white;
        padding: 30px;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        border-left: 5px solid #007bff;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 60px;
            height: 60px;
            background: rgba(0, 123, 255, 0.1);
            border-radius: 50%;
            transform: translate(20px, -20px);
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .stat-card.total-events {
            border-left-color: #007bff;
        }

            .stat-card.total-events::before {
                background: rgba(0, 123, 255, 0.1);
            }

        .stat-card.upcoming-events {
            border-left-color: #28a745;
        }

            .stat-card.upcoming-events::before {
                background: rgba(40, 167, 69, 0.1);
            }

        .stat-card.my-bookings {
            border-left-color: #ffc107;
        }

            .stat-card.my-bookings::before {
                background: rgba(255, 193, 7, 0.1);
            }

        .stat-card.available-events {
            border-left-color: #17a2b8;
        }

            .stat-card.available-events::before {
                background: rgba(23, 162, 184, 0.1);
            }

    .stat-icon {
        font-size: 2.5rem;
        margin-bottom: 15px;
        opacity: 0.8;
    }

    .stat-card.total-events .stat-icon {
        color: #007bff;
    }

    .stat-card.upcoming-events .stat-icon {
        color: #28a745;
    }

    .stat-card.my-bookings .stat-icon {
        color: #ffc107;
    }

    .stat-card.available-events .stat-icon {
        color: #17a2b8;
    }

    .stat-number {
        font-size: 3rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 5px;
        line-height: 1;
    }

    .stat-label {
        color: #6c757d;
        font-size: 1rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 10px;
    }

    .stat-description {
        color: #8e9ba7;
        font-size: 0.85rem;
        margin: 0;
    }

    /* Login Prompt Card */
    .login-prompt {
        background: white;
        border-radius: 12px;
        padding: 40px;
        text-align: center;
        margin-bottom: 30px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        border: 1px solid #e9ecef;
    }

        .login-prompt h3 {
            margin-bottom: 15px;
            font-size: 1.5rem;
            color: #2c3e50;
            font-weight: 600;
        }

        .login-prompt p {
            margin-bottom: 25px;
            color: #6c757d;
            font-size: 1rem;
        }

    /* Events Grid - Updated Style */
    .events-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 25px;
        margin-top: 30px;
    }

    .event-card {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        position: relative;
        border: 1px solid #e9ecef;
    }

        .event-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

    .event-header {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        padding: 25px;
        position: relative;
        overflow: hidden;
    }

        .event-header::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            transform: rotate(45deg);
        }

    .event-title {
        font-size: 1.4rem;
        font-weight: 600;
        margin: 0 0 10px 0;
        position: relative;
        z-index: 1;
    }

    .event-date {
        font-size: 0.95rem;
        opacity: 0.9;
        position: relative;
        z-index: 1;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .event-body {
        padding: 25px;
    }

    .event-description {
        color: #6c757d;
        margin-bottom: 20px;
        line-height: 1.6;
        font-size: 0.95rem;
    }

    .event-details {
        margin-bottom: 20px;
    }

    .detail-item {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
        color: #495057;
        font-size: 0.9rem;
    }

    .detail-icon {
        width: 20px;
        height: 20px;
        margin-right: 10px;
        color: #667eea;
    }

    .capacity-info {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
        border-left: 4px solid #28a745;
    }

    .capacity-full {
        border-left-color: #dc3545;
        background: #fff5f5;
    }

    .capacity-text {
        font-size: 0.9rem;
        margin: 0;
        color: #495057;
    }

    .spots-available {
        font-weight: 600;
        color: #28a745;
    }

    .spots-full {
        color: #dc3545;
    }

    .event-actions {
        display: flex;
        gap: 10px;
        justify-content: space-between;
        align-items: center;
    }

    .btn-book {
        flex: 1;
        padding: 12px 20px;
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        border: none;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

        .btn-book:hover {
            background: linear-gradient(135deg, #218838, #1e7e34);
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.4);
            color: white;
            text-decoration: none;
        }

        .btn-book:disabled {
            background: #6c757d;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

    .btn-booked {
        background: linear-gradient(135deg, #ffc107, #e0a800);
        color: #212529;
    }

        .btn-booked:hover {
            background: linear-gradient(135deg, #e0a800, #d39e00);
            color: #212529;
        }

    .status-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        z-index: 2;
    }

    .badge-upcoming {
        background: rgba(40, 167, 69, 0.9);
        color: white;
    }

    .badge-full {
        background: rgba(220, 53, 69, 0.9);
        color: white;
    }

    .badge-past {
        background: rgba(108, 117, 125, 0.9);
        color: white;
    }

    .no-events {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        border: 1px solid #e9ecef;
    }

        .no-events h3 {
            font-size: 2rem;
            margin-bottom: 15px;
            color: #6c757d;
            font-weight: 600;
        }

        .no-events p {
            font-size: 1.1rem;
            color: #8e9ba7;
            margin-bottom: 25px;
        }

        .no-events i {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.3;
            color: #6c757d;
        }

    /* Alert Styles */
    .alert {
        border-radius: 8px;
        border: none;
        padding: 15px 20px;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border-left: 4px solid #28a745;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border-left: 4px solid #dc3545;
    }

    
</style>

<div class="events-container">
    <!-- Welcome Banner -->
    <div class="welcome-banner">
        <h1>🎉 Discover Amazing Events</h1>
        <p>Find and book events that match your interests</p>
    </div>

    @if (!string.IsNullOrEmpty(username))
    {
        <!-- Enhanced User Navigation Bar -->
        <div class="user-navbar">
            <div class="navbar-content">
                <div class="user-info">
                    <h3>Welcome back, @username! 👋</h3>
                    <p>@(userRole == "Admin" ? "Administrator" : "Member") • Ready to explore events?</p>
                </div>
                <div class="nav-actions">
                    <form asp-controller="User" asp-action="Logout" method="post" style="display: inline;">
                        <button type="submit" class="btn-nav btn-danger-nav" onclick="return confirm('Are you sure you want to logout?')">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Quick Stats for logged-in users -->
        @if (Model != null && Model.Any())
        {
            var totalEvents = Model.Count();
            var upcomingEvents = Model.Count(e => e.Date > DateTime.Now);
            var userBookedEvents = Model.Count(e => e.IsBookedByCurrentUser);
            var availableEvents = Model.Count(e => e.Date > DateTime.Now && e.AvailableSpots > 0 && !e.IsBookedByCurrentUser);

            <div class="stats-grid">
                <div class="stat-card total-events">
                    <div class="stat-icon">
                        <i class="fas fa-calendar-alt"></i>
                    </div>
                    <div class="stat-number">@totalEvents</div>
                    <div class="stat-label">Total Events</div>
                    <p class="stat-description">All available events</p>
                </div>
                <div class="stat-card upcoming-events">
                    <div class="stat-icon">
                        <i class="fas fa-calendar-check"></i>
                    </div>
                    <div class="stat-number">@upcomingEvents</div>
                    <div class="stat-label">Upcoming</div>
                    <p class="stat-description">Events coming soon</p>
                </div>
                <div class="stat-card my-bookings">
                    <div class="stat-icon">
                        <i class="fas fa-ticket-alt"></i>
                    </div>
                    <div class="stat-number">@userBookedEvents</div>
                    <div class="stat-label">My Bookings</div>
                    <p class="stat-description">Events you've booked</p>
                </div>
                <div class="stat-card available-events">
                    <div class="stat-icon">
                        <i class="fas fa-calendar-plus"></i>
                    </div>
                    <div class="stat-number">@availableEvents</div>
                    <div class="stat-label">Available to Book</div>
                    <p class="stat-description">Ready for booking</p>
                </div>
            </div>
        }
    }
    else
    {
        <!-- Guest User Prompt -->
        <div class="login-prompt">
            <i class="fas fa-user-circle" style="font-size: 3rem; color: #6c757d; margin-bottom: 20px; opacity: 0.5;"></i>
            <h3>Join the Fun! 🎊</h3>
            <p>Sign in to book events, manage your bookings, and access exclusive features</p>
            <div class="nav-actions" style="justify-content: center;">
                <a href="@Url.Action("Login", "User", new { returnUrl = Url.Action("Index", "Event") })" class="btn-nav btn-primary-nav">
                    <i class="fas fa-sign-in-alt"></i> Sign In
                </a>
                <a href="@Url.Action("Register", "User")" class="btn-nav btn-secondary-nav">
                    <i class="fas fa-user-plus"></i> Create Account
                </a>
            </div>
        </div>
    }

    <!-- Alert Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            <i class="fas fa-check-circle"></i>
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-circle"></i>
            @TempData["ErrorMessage"]
        </div>
    }

    <!-- Events Grid -->
    @if (Model != null && Model.Any())
    {
        <div class="events-grid">
            @foreach (var eventItem in Model)
            {
                var isUpcoming = eventItem.Date > DateTime.Now;
                var isFull = eventItem.AvailableSpots <= 0;
                var isPast = eventItem.Date <= DateTime.Now;

                <div class="event-card">
                    @if (isPast)
                    {
                        <div class="status-badge badge-past">Past Event</div>
                    }
                    else if (isFull)
                    {
                        <div class="status-badge badge-full">Fully Booked</div>
                    }
                    else
                    {
                        <div class="status-badge badge-upcoming">Available</div>
                    }

                    <div class="event-header">
                        <h3 class="event-title">@eventItem.Title</h3>
                        <div class="event-date">
                            <i class="fas fa-calendar"></i>
                            @eventItem.Date.ToString("MMM dd, yyyy 'at' hh:mm tt")
                        </div>
                    </div>

                    <div class="event-body">
                        <p class="event-description">@eventItem.Description</p>

                        <div class="event-details">
                            <div class="detail-item">
                                <i class="fas fa-map-marker-alt detail-icon"></i>
                                @eventItem.Location
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-users detail-icon"></i>
                                Capacity: @eventItem.Capacity people
                            </div>
                        </div>

                        <div class="capacity-info @(isFull ? "capacity-full" : "")">
                            <p class="capacity-text">
                                <span class="@(isFull ? "spots-full" : "spots-available")">
                                    @if (isFull)
                                    {
                                        <strong>Event is fully booked!</strong>
                                    }
                                    else
                                    {
                                        <strong>@eventItem.AvailableSpots spots available</strong>
                                    }
                                </span>
                            </p>
                        </div>

                        <div class="event-actions">
                            @if (currentUserId.HasValue)
                            {
                                @if (isPast)
                                {
                                    <button class="btn-book" disabled>
                                        <i class="fas fa-clock"></i> Event Ended
                                    </button>
                                }
                                else if (eventItem.IsBookedByCurrentUser)
                                {
                                    <span class="btn-book btn-booked">
                                        <i class="fas fa-check"></i> Already Booked
                                    </span>
                                }
                                else if (isFull)
                                {
                                    <button class="btn-book" disabled>
                                        <i class="fas fa-times"></i> Fully Booked
                                    </button>
                                }
                                else
                                {
                                    <form asp-controller="Booking" asp-action="BookEvent" method="post" style="flex: 1;" class="booking-form">
                                        <input type="hidden" name="eventId" value="@eventItem.Id" />
                                        <input type="hidden" name="userId" value="@currentUserId" />
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn-book" onclick="return confirm('Are you sure you want to book this event?')">
                                            <i class="fas fa-ticket-alt"></i> Book Now
                                        </button>
                                    </form>
                                }
                            }
                            else
                            {
                                <a href="@Url.Action("Login", "User", new { returnUrl = Url.Action("Index", "Event") })" class="btn-book">
                                    <i class="fas fa-sign-in-alt"></i> Login to Book
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="no-events">
            <i class="fas fa-calendar-times"></i>
            <h3>No Events Available</h3>
            <p>Check back later for exciting events!</p>
            @if (!string.IsNullOrEmpty(username) && userRole == "Admin")
            {
                <div style="margin-top: 20px;">
                    <a href="@Url.Action("CreateEvent", "Admin")" class="btn-nav btn-primary-nav">
                        <i class="fas fa-plus"></i> Create First Event
                    </a>
                </div>
            }
        </div>
    }
</div>

<script>
    // Auto-hide alerts after 5 seconds
    document.addEventListener('DOMContentLoaded', function() {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(function(alert) {
            setTimeout(function() {
                alert.style.transition = 'opacity 0.5s ease';
                alert.style.opacity = '0';
                setTimeout(function() {
                    alert.remove();
                }, 500);
            }, 5000);
        });
    });

    // Add loading state to book buttons
    document.querySelectorAll('.booking-form').forEach(function(form) {
        form.addEventListener('submit', function(e) {
            const button = form.querySelector('.btn-book');
            const originalText = button.innerHTML;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Booking...';
            button.disabled = true;
            
            // Re-enable button after 10 seconds in case of network issues
            setTimeout(function() {
                if (button.disabled) {
                    button.innerHTML = originalText;
                    button.disabled = false;
                }
            }, 10000);
        });
    });

    // Add hover effects to stat cards (same as admin dashboard)
    document.querySelectorAll('.stat-card').forEach(function(card) {
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-8px) scale(1.02)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0) scale(1)';
        });
    });

    // Auto-refresh dashboard every 5 minutes (like admin dashboard)
    setTimeout(function() {
        location.reload();
    }, 300000);
</script>
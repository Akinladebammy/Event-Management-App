@model List<EventManagementApp.Controllers.AdminUserDto>

@{
    ViewData["Title"] = "Manage Users";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .users-container {
        padding: 30px;
        background-color: #f8f9fa;
        min-height: calc(100vh - 140px);
    }

    .users-header {
        background: white;
        padding: 25px 30px;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        margin-bottom: 25px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .users-header h2 {
        margin: 0;
        color: #2c3e50;
        font-size: 1.8rem;
        font-weight: 600;
    }

    .users-stats {
        display: flex;
        gap: 20px;
        color: #6c757d;
        font-size: 0.9rem;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .users-table-container {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        overflow: hidden;
    }

    .table-header {
        background: #f8f9fa;
        padding: 20px 25px;
        border-bottom: 1px solid #e9ecef;
    }

    .table-header h3 {
        margin: 0;
        color: #2c3e50;
        font-size: 1.2rem;
        font-weight: 600;
    }

    .users-table {
        width: 100%;
        margin: 0;
        border-collapse: collapse;
    }

    .users-table th {
        background: #f8f9fa;
        padding: 15px 20px;
        text-align: left;
        font-weight: 600;
        color: #495057;
        border-bottom: 2px solid #dee2e6;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .users-table td {
        padding: 20px;
        border-bottom: 1px solid #f1f3f4;
        vertical-align: middle;
    }

    .users-table tr:hover {
        background-color: #f8f9fa;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .user-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
        font-size: 1.1rem;
    }

    .user-details h4 {
        margin: 0 0 2px 0;
        font-size: 1rem;
        color: #2c3e50;
        font-weight: 600;
    }

    .user-details p {
        margin: 0;
        color: #6c757d;
        font-size: 0.85rem;
    }

    .role-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .role-admin {
        background: #fff3cd;
        color: #856404;
        border: 1px solid #ffeaa7;
    }

    .role-user {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .stats-cell {
        text-align: center;
    }

    .stats-number {
        font-size: 1.2rem;
        font-weight: 600;
        color: #2c3e50;
        display: block;
    }

    .stats-label {
        font-size: 0.75rem;
        color: #6c757d;
        text-transform: uppercase;
    }

    .date-cell {
        color: #6c757d;
        font-size: 0.9rem;
    }

    .actions-cell {
        text-align: center;
    }

    .action-buttons {
        display: flex;
        gap: 8px;
        justify-content: center;
        align-items: center;
    }

    .btn-sm {
        padding: 6px 12px;
        font-size: 0.8rem;
        border-radius: 6px;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 5px;
    }

    .btn-edit {
        background: #17a2b8;
        color: white;
    }

    .btn-edit:hover {
        background: #138496;
        color: white;
        text-decoration: none;
    }

    .btn-delete {
        background: #dc3545;
        color: white;
    }

    .btn-delete:hover {
        background: #c82333;
        color: white;
    }

    .btn-role {
        background: #ffc107;
        color: #212529;
    }

    .btn-role:hover {
        background: #e0a800;
        color: #212529;
    }

    .empty-state {
        text-align: center;
        padding: 80px 20px;
        color: #6c757d;
    }

    .empty-state i {
        font-size: 4rem;
        margin-bottom: 20px;
        opacity: 0.3;
    }

    .empty-state h4 {
        margin-bottom: 10px;
        color: #495057;
    }

    .empty-state p {
        margin-bottom: 0;
        font-size: 0.9rem;
    }

    .role-form {
        display: inline-flex;
        align-items: center;
        gap: 5px;
    }

    .role-select {
        padding: 4px 8px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        font-size: 0.8rem;
        background: white;
    }

    .last-login {
        display: flex;
        align-items: center;
        gap: 5px;
        color: #6c757d;
        font-size: 0.85rem;
    }

    .online-indicator {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: #28a745;
    }

    .offline-indicator {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: #6c757d;
    }
</style>

<div class="users-container">
    <!-- Header -->
    <div class="users-header">
        <h2>User Management</h2>
        <div class="users-stats">
            <div class="stat-item">
                <i class="fas fa-users"></i>
                <span>Total Users: @Model.Count</span>
            </div>
            <div class="stat-item">
                <i class="fas fa-user-shield"></i>
                <span>Admins: @Model.Count(u => u.Role == EventManagementApp.Models.Enum.Role.Admin)</span>
            </div>
            <div class="stat-item">
                <i class="fas fa-user"></i>
                <span>Regular Users: @Model.Count(u => u.Role == EventManagementApp.Models.Enum.Role.Customer)</span>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="users-table-container">
        <div class="table-header">
            <h3>All Users</h3>
        </div>

        @if (Model != null && Model.Any())
        {
            <table class="users-table">
                <thead>
                    <tr>
                        <th>User</th>
                        <th>Role</th>
                        <th>Bookings</th>
                    
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>
                                <div class="user-info">
                                    <div class="user-avatar">
                                        @user.Username.Substring(0, 1).ToUpper()
                                    </div>
                                    <div class="user-details">
                                        <h4>@user.Username</h4>
                                        <p>@user.Email</p>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <span class="role-badge @(user.Role == EventManagementApp.Models.Enum.Role.Admin ? "role-admin" : "role-user")">
                                    @user.Role.ToString()
                                </span>
                            </td>
                            <td class="stats-cell">
                                <span class="stats-number">@user.TotalBookings</span>
                                <span class="stats-label">bookings</span>
                            </td>
           
                            <td class="actions-cell">
                                <div class="action-buttons">
                                    <!-- Role Update Form -->
                                    <form asp-action="UpdateUserRole" method="post" class="role-form" style="display: inline;">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@user.Id" />
                                        <select name="role" class="role-select" onchange="this.form.submit()">
                                            <option value="Customer" selected="@(user.Role == EventManagementApp.Models.Enum.Role.Customer)">User</option>
                                            <option value="Admin" selected="@(user.Role == EventManagementApp.Models.Enum.Role.Admin)">Admin</option>
                                        </select>
                                    </form>

                                    <!-- Delete Button -->
                                    <form asp-action="DeleteUser" method="post" style="display: inline;" 
                                          onsubmit="return confirm('Are you sure you want to delete this user? This action cannot be undone.')">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@user.Id" />
                                        <button type="submit" class="btn-sm btn-delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-users"></i>
                <h4>No Users Found</h4>
                <p>There are currently no users in the system.</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Confirm role changes
        document.querySelectorAll('.role-select').forEach(select => {
            select.addEventListener('change', function(e) {
                const currentValue = this.getAttribute('data-current') || this.value;
                if (this.value !== currentValue) {
                    if (!confirm('Are you sure you want to change this user\'s role?')) {
                        this.value = currentValue;
                        e.preventDefault();
                        return false;
                    }
                }
            });
        });

        // Store current values for comparison
        document.querySelectorAll('.role-select').forEach(select => {
            select.setAttribute('data-current', select.value);
        });
    </script>
}
